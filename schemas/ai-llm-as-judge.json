{
  "fields": [
    {
      "protocols": {
        "default": [
          "grpc",
          "grpcs",
          "http",
          "https"
        ],
        "elements": {
          "type": "string",
          "one_of": [
            "grpc",
            "grpcs",
            "http",
            "https"
          ]
        },
        "type": "set",
        "required": true,
        "description": "A set of strings representing HTTP protocols."
      }
    },
    {
      "config": {
        "fields": [
          {
            "prompt": {
              "description": "Use this prompt to tune the LLM system/assistant message for the llm as a judge prompt.",
              "default": "You are a strict evaluator. You will be given a prompt and a response. Your task is to judge whether the response is correct or incorrect. You must assign a score between 1 and 100, where: 100 represents a completely correct and ideal response, 1 represents a completely incorrect or irrelevant response. Your score must be a single number only â€” no text, labels, or explanations. Use the full range of values (e.g., 13, 47, 86), not just round numbers like 10, 50, or 100. Be accurate and consistent, as this score will be used by another model for learning and evaluation.",
              "required": true,
              "type": "string"
            }
          },
          {
            "message_countback": {
              "between": [
                1,
                1000
              ],
              "default": 1,
              "description": "Number of messages in the chat history to use for evaluating the request",
              "required": true,
              "type": "number"
            }
          },
          {
            "ignore_system_prompts": {
              "default": true,
              "description": "Ignore and discard any system prompts when evaluating the request",
              "type": "boolean"
            }
          },
          {
            "ignore_assistant_prompts": {
              "default": true,
              "description": "Ignore and discard any assistant prompts when evaluating the request",
              "type": "boolean"
            }
          },
          {
            "ignore_tool_prompts": {
              "default": true,
              "description": "Ignore and discard any tool prompts when evaluating the request",
              "type": "boolean"
            }
          },
          {
            "http_timeout": {
              "description": "Timeout in milliseconds for the AI upstream service.",
              "default": 60000,
              "required": true,
              "type": "integer"
            }
          },
          {
            "https_verify": {
              "description": "Verify the TLS certificate of the AI upstream service.",
              "default": true,
              "required": true,
              "type": "boolean"
            }
          },
          {
            "sampling_rate": {
              "between": [
                0,
                1
              ],
              "default": 1,
              "description": "Judging request sampling rate for configuring the probability-based sampler.",
              "required": false,
              "type": "number"
            }
          },
          {
            "http_proxy_host": {
              "type": "string",
              "description": "A string representing a host name, such as example.com."
            }
          },
          {
            "http_proxy_port": {
              "between": [
                0,
                65535
              ],
              "type": "integer",
              "description": "An integer representing a port number between 0 and 65535, inclusive."
            }
          },
          {
            "https_proxy_host": {
              "type": "string",
              "description": "A string representing a host name, such as example.com."
            }
          },
          {
            "https_proxy_port": {
              "between": [
                0,
                65535
              ],
              "type": "integer",
              "description": "An integer representing a port number between 0 and 65535, inclusive."
            }
          },
          {
            "llm": {
              "type": "record",
              "fields": [
                {
                  "route_type": {
                    "description": "The model's operation implementation, for this provider. ",
                    "one_of": [
                      "llm/v1/chat",
                      "llm/v1/completions",
                      "llm/v1/embeddings",
                      "llm/v1/responses",
                      "llm/v1/assistants",
                      "llm/v1/batches",
                      "llm/v1/files",
                      "image/v1/images/generations",
                      "image/v1/images/edits",
                      "audio/v1/audio/transcriptions",
                      "audio/v1/audio/speech",
                      "audio/v1/audio/translations",
                      "realtime/v1/realtime",
                      "preserve"
                    ],
                    "required": true,
                    "type": "string"
                  }
                },
                {
                  "auth": {
                    "required": false,
                    "fields": [
                      {
                        "header_name": {
                          "referenceable": true,
                          "description": "If AI model requires authentication via Authorization or API key header, specify its name here.",
                          "required": false,
                          "type": "string"
                        }
                      },
                      {
                        "header_value": {
                          "encrypted": true,
                          "type": "string",
                          "referenceable": true,
                          "required": false,
                          "description": "Specify the full auth header value for 'header_name', for example 'Bearer key' or just 'key'."
                        }
                      },
                      {
                        "param_name": {
                          "referenceable": true,
                          "description": "If AI model requires authentication via query parameter, specify its name here.",
                          "required": false,
                          "type": "string"
                        }
                      },
                      {
                        "param_value": {
                          "encrypted": true,
                          "type": "string",
                          "referenceable": true,
                          "required": false,
                          "description": "Specify the full parameter value for 'param_name'."
                        }
                      },
                      {
                        "param_location": {
                          "description": "Specify whether the 'param_name' and 'param_value' options go in a query string, or the POST form/JSON body.",
                          "one_of": [
                            "query",
                            "body"
                          ],
                          "required": false,
                          "type": "string"
                        }
                      },
                      {
                        "azure_use_managed_identity": {
                          "description": "Set true to use the Azure Cloud Managed Identity (or user-assigned identity) to authenticate with Azure-provider models.",
                          "default": false,
                          "required": false,
                          "type": "boolean"
                        }
                      },
                      {
                        "azure_client_id": {
                          "referenceable": true,
                          "description": "If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client ID.",
                          "required": false,
                          "type": "string"
                        }
                      },
                      {
                        "azure_client_secret": {
                          "encrypted": true,
                          "type": "string",
                          "referenceable": true,
                          "required": false,
                          "description": "If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client secret."
                        }
                      },
                      {
                        "azure_tenant_id": {
                          "referenceable": true,
                          "description": "If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the tenant ID.",
                          "required": false,
                          "type": "string"
                        }
                      },
                      {
                        "gcp_use_service_account": {
                          "description": "Use service account auth for GCP-based providers and models.",
                          "default": false,
                          "required": false,
                          "type": "boolean"
                        }
                      },
                      {
                        "gcp_service_account_json": {
                          "encrypted": true,
                          "type": "string",
                          "referenceable": true,
                          "required": false,
                          "description": "Set this field to the full JSON of the GCP service account to authenticate, if required. If null (and gcp_use_service_account is true), Kong will attempt to read from environment variable `GCP_SERVICE_ACCOUNT`."
                        }
                      },
                      {
                        "aws_access_key_id": {
                          "encrypted": true,
                          "type": "string",
                          "referenceable": true,
                          "required": false,
                          "description": "Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_ACCESS_KEY_ID environment variable for this plugin instance."
                        }
                      },
                      {
                        "aws_secret_access_key": {
                          "encrypted": true,
                          "type": "string",
                          "referenceable": true,
                          "required": false,
                          "description": "Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_SECRET_ACCESS_KEY environment variable for this plugin instance."
                        }
                      },
                      {
                        "allow_override": {
                          "description": "If enabled, the authorization header or parameter can be overridden in the request by the value configured in the plugin.",
                          "default": false,
                          "required": false,
                          "type": "boolean"
                        }
                      }
                    ],
                    "type": "record"
                  }
                },
                {
                  "model": {
                    "required": true,
                    "fields": [
                      {
                        "provider": {
                          "description": "AI provider request format - Kong translates requests to and from the specified backend compatible formats.",
                          "one_of": [
                            "openai",
                            "azure",
                            "anthropic",
                            "cohere",
                            "mistral",
                            "llama2",
                            "gemini",
                            "bedrock",
                            "huggingface"
                          ],
                          "required": true,
                          "type": "string"
                        }
                      },
                      {
                        "name": {
                          "description": "Model name to execute.",
                          "required": false,
                          "type": "string"
                        }
                      },
                      {
                        "options": {
                          "type": "record",
                          "required": false,
                          "fields": [
                            {
                              "max_tokens": {
                                "description": "Defines the max_tokens, if using chat or completion models.",
                                "required": false,
                                "type": "integer"
                              }
                            },
                            {
                              "input_cost": {
                                "gt": 0,
                                "description": "Defines the cost per 1M tokens in your prompt.",
                                "required": false,
                                "type": "number"
                              }
                            },
                            {
                              "output_cost": {
                                "gt": 0,
                                "description": "Defines the cost per 1M tokens in the output of the AI.",
                                "required": false,
                                "type": "number"
                              }
                            },
                            {
                              "temperature": {
                                "between": [
                                  0,
                                  5
                                ],
                                "description": "Defines the matching temperature, if using chat or completion models.",
                                "required": false,
                                "type": "number"
                              }
                            },
                            {
                              "top_p": {
                                "between": [
                                  0,
                                  1
                                ],
                                "description": "Defines the top-p probability mass, if supported.",
                                "required": false,
                                "type": "number"
                              }
                            },
                            {
                              "top_k": {
                                "between": [
                                  0,
                                  500
                                ],
                                "description": "Defines the top-k most likely tokens, if supported.",
                                "required": false,
                                "type": "integer"
                              }
                            },
                            {
                              "anthropic_version": {
                                "description": "Defines the schema/API version, if using Anthropic provider.",
                                "required": false,
                                "type": "string"
                              }
                            },
                            {
                              "azure_instance": {
                                "description": "Instance name for Azure OpenAI hosted models.",
                                "required": false,
                                "type": "string"
                              }
                            },
                            {
                              "azure_api_version": {
                                "description": "'api-version' for Azure OpenAI instances.",
                                "default": "2023-05-15",
                                "required": false,
                                "type": "string"
                              }
                            },
                            {
                              "azure_deployment_id": {
                                "description": "Deployment ID for Azure OpenAI instances.",
                                "required": false,
                                "type": "string"
                              }
                            },
                            {
                              "llama2_format": {
                                "description": "If using llama2 provider, select the upstream message format.",
                                "one_of": [
                                  "raw",
                                  "openai",
                                  "ollama"
                                ],
                                "required": false,
                                "type": "string"
                              }
                            },
                            {
                              "mistral_format": {
                                "description": "If using mistral provider, select the upstream message format.",
                                "one_of": [
                                  "openai",
                                  "ollama"
                                ],
                                "required": false,
                                "type": "string"
                              }
                            },
                            {
                              "upstream_url": {
                                "description": "Manually specify or override the full URL to the AI operation endpoints, when calling (self-)hosted models, or for running via a private endpoint.",
                                "required": false,
                                "type": "string"
                              }
                            },
                            {
                              "upstream_path": {
                                "deprecation": {
                                  "message": "llm: config.model.options.upstream_path is deprecated, please use config.model.options.upstream_url instead",
                                  "removal_in_version": "4.0"
                                },
                                "type": "string",
                                "required": false,
                                "description": "Manually specify or override the AI operation path, used when e.g. using the 'preserve' route_type."
                              }
                            },
                            {
                              "embeddings_dimensions": {
                                "gt": 0,
                                "description": "If using embeddings models, set the number of dimensions to generate.",
                                "required": false,
                                "type": "integer"
                              }
                            },
                            {
                              "gemini": {
                                "entity_checks": [
                                  {
                                    "mutually_required": [
                                      "api_endpoint",
                                      "project_id",
                                      "location_id"
                                    ]
                                  },
                                  {
                                    "custom_entity_check": {
                                      "field_sources": [
                                        "endpoint_id",
                                        "api_endpoint",
                                        "project_id",
                                        "location_id"
                                      ]
                                    }
                                  }
                                ],
                                "fields": [
                                  {
                                    "api_endpoint": {
                                      "type": "string",
                                      "required": false,
                                      "description": "If running Gemini on Vertex, specify the regional API endpoint (hostname only)."
                                    }
                                  },
                                  {
                                    "project_id": {
                                      "type": "string",
                                      "required": false,
                                      "description": "If running Gemini on Vertex, specify the project ID."
                                    }
                                  },
                                  {
                                    "location_id": {
                                      "type": "string",
                                      "required": false,
                                      "description": "If running Gemini on Vertex, specify the location ID."
                                    }
                                  },
                                  {
                                    "endpoint_id": {
                                      "description": "If running Gemini on Vertex Model Garden, specify the endpoint ID.",
                                      "required": false,
                                      "type": "string"
                                    }
                                  }
                                ],
                                "required": false,
                                "type": "record"
                              }
                            },
                            {
                              "bedrock": {
                                "type": "record",
                                "required": false,
                                "fields": [
                                  {
                                    "aws_region": {
                                      "type": "string",
                                      "required": false,
                                      "description": "If using AWS providers (Bedrock) you can override the `AWS_REGION` environment variable by setting this option."
                                    }
                                  },
                                  {
                                    "aws_assume_role_arn": {
                                      "type": "string",
                                      "required": false,
                                      "description": "If using AWS providers (Bedrock) you can assume a different role after authentication with the current IAM context is successful."
                                    }
                                  },
                                  {
                                    "aws_role_session_name": {
                                      "description": "If using AWS providers (Bedrock), set the identifier of the assumed role session.",
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "aws_sts_endpoint_url": {
                                      "description": "If using AWS providers (Bedrock), override the STS endpoint URL when assuming a different role.",
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "embeddings_normalize": {
                                      "default": false,
                                      "type": "boolean",
                                      "description": "If using AWS providers (Bedrock), set to true to normalize the embeddings."
                                    }
                                  },
                                  {
                                    "performance_config_latency": {
                                      "type": "string",
                                      "required": false,
                                      "description": "Force the client's performance configuration 'latency' for all requests. Leave empty to let the consumer select the performance configuration."
                                    }
                                  }
                                ],
                                "entity_checks": [
                                  {
                                    "mutually_required": [
                                      "aws_assume_role_arn",
                                      "aws_role_session_name"
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "huggingface": {
                                "required": false,
                                "fields": [
                                  {
                                    "use_cache": {
                                      "description": "Use the cache layer on the inference API",
                                      "required": false,
                                      "type": "boolean"
                                    }
                                  },
                                  {
                                    "wait_for_model": {
                                      "description": "Wait for the model if it is not ready",
                                      "required": false,
                                      "type": "boolean"
                                    }
                                  }
                                ],
                                "type": "record"
                              }
                            },
                            {
                              "cohere": {
                                "required": false,
                                "fields": [
                                  {
                                    "embedding_input_type": {
                                      "one_of": [
                                        "search_document",
                                        "search_query",
                                        "classification",
                                        "clustering",
                                        "image"
                                      ],
                                      "description": "The purpose of the input text to calculate embedding vectors.",
                                      "default": "classification",
                                      "required": false,
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "wait_for_model": {
                                      "description": "Wait for the model if it is not ready",
                                      "required": false,
                                      "type": "boolean"
                                    }
                                  }
                                ],
                                "type": "record"
                              }
                            }
                          ],
                          "description": "Key/value settings for the model"
                        }
                      }
                    ],
                    "type": "record"
                  }
                },
                {
                  "logging": {
                    "required": true,
                    "fields": [
                      {
                        "log_statistics": {
                          "description": "If enabled and supported by the driver, will add model usage and token metrics into the Kong log plugin(s) output.",
                          "default": false,
                          "required": true,
                          "type": "boolean"
                        }
                      },
                      {
                        "log_payloads": {
                          "description": "If enabled, will log the request and response body into the Kong log plugin(s) output.",
                          "default": false,
                          "required": true,
                          "type": "boolean"
                        }
                      }
                    ],
                    "type": "record"
                  }
                }
              ],
              "required": true,
              "entity_checks": [
                {
                  "conditional": {
                    "then_field": "auth.allow_override",
                    "if_field": "model.provider",
                    "then_match": {
                      "eq": false
                    },
                    "then_err": "bedrock and gemini only support auth.allow_override = false",
                    "if_match": {
                      "one_of": [
                        "bedrock",
                        "gemini"
                      ]
                    }
                  }
                },
                {
                  "mutually_required": [
                    "auth.header_name",
                    "auth.header_value"
                  ]
                },
                {
                  "mutually_required": [
                    "auth.param_name",
                    "auth.param_value",
                    "auth.param_location"
                  ]
                },
                {
                  "conditional_at_least_one_of": {
                    "if_match": {
                      "one_of": [
                        "llama2"
                      ]
                    },
                    "if_field": "model.provider",
                    "then_at_least_one_of": [
                      "model.options.llama2_format"
                    ],
                    "then_err": "must set %s for llama2 provider"
                  }
                },
                {
                  "conditional_at_least_one_of": {
                    "if_match": {
                      "one_of": [
                        "mistral"
                      ]
                    },
                    "if_field": "model.provider",
                    "then_at_least_one_of": [
                      "model.options.mistral_format"
                    ],
                    "then_err": "must set %s for mistral provider"
                  }
                },
                {
                  "conditional_at_least_one_of": {
                    "if_match": {
                      "one_of": [
                        "anthropic"
                      ]
                    },
                    "if_field": "model.provider",
                    "then_at_least_one_of": [
                      "model.options.anthropic_version"
                    ],
                    "then_err": "must set %s for anthropic provider"
                  }
                },
                {
                  "conditional_at_least_one_of": {
                    "if_match": {
                      "one_of": [
                        "azure"
                      ]
                    },
                    "if_field": "model.provider",
                    "then_at_least_one_of": [
                      "model.options.azure_instance"
                    ],
                    "then_err": "must set %s for azure provider"
                  }
                },
                {
                  "conditional_at_least_one_of": {
                    "if_match": {
                      "one_of": [
                        "azure"
                      ]
                    },
                    "if_field": "model.provider",
                    "then_at_least_one_of": [
                      "model.options.azure_api_version"
                    ],
                    "then_err": "must set %s for azure provider"
                  }
                },
                {
                  "conditional_at_least_one_of": {
                    "if_match": {
                      "one_of": [
                        "azure"
                      ]
                    },
                    "if_field": "model.provider",
                    "then_at_least_one_of": [
                      "model.options.azure_deployment_id"
                    ],
                    "then_err": "must set %s for azure provider"
                  }
                },
                {
                  "conditional_at_least_one_of": {
                    "if_match": {
                      "one_of": [
                        "llama2"
                      ]
                    },
                    "if_field": "model.provider",
                    "then_at_least_one_of": [
                      "model.options.upstream_url"
                    ],
                    "then_err": "must set %s for self-hosted providers/models"
                  }
                },
                {
                  "custom_entity_check": {
                    "field_sources": [
                      "route_type",
                      "model",
                      "logging"
                    ]
                  }
                },
                {
                  "custom_entity_check": {
                    "field_sources": [
                      "route_type"
                    ]
                  }
                },
                {
                  "custom_entity_check": {
                    "field_sources": [
                      "route_type",
                      "model"
                    ]
                  }
                },
                {
                  "custom_entity_check": {
                    "field_sources": [
                      "route_type",
                      "model"
                    ]
                  }
                }
              ]
            }
          }
        ],
        "required": true,
        "type": "record"
      }
    }
  ],
  "entity_checks": [
    {
      "conditional": {
        "then_field": "config.llm.route_type",
        "if_field": "config.llm.route_type",
        "then_match": {
          "eq": "llm/v1/chat"
        },
        "then_err": "'config.llm.route_type' must be 'llm/v1/chat' for AI llm as judge plugins",
        "if_match": {
          "not_one_of": [
            "llm/v1/chat"
          ]
        }
      }
    },
    {
      "mutually_required": [
        "config.http_proxy_host",
        "config.http_proxy_port"
      ]
    },
    {
      "mutually_required": [
        "config.https_proxy_host",
        "config.https_proxy_port"
      ]
    }
  ]
}